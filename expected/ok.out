--
-- https://tools.ietf.org/html/rfc7049#appendix-A
--
BEGIN;
CREATE EXTENSION IF NOT EXISTS cbor;
SELECT cbor.to_jsonb('\x00');
 to_jsonb 
----------
 [0]
(1 row)

SELECT cbor.to_jsonb('\x01');
 to_jsonb 
----------
 [1]
(1 row)

SELECT cbor.to_jsonb('\x0a');
 to_jsonb 
----------
 [10]
(1 row)

SELECT cbor.to_jsonb('\x17');
 to_jsonb 
----------
 [23]
(1 row)

SELECT cbor.to_jsonb('\x1818');
 to_jsonb 
----------
 [24]
(1 row)

SELECT cbor.to_jsonb('\x1819');
 to_jsonb 
----------
 [25]
(1 row)

SELECT cbor.to_jsonb('\x1864');
 to_jsonb 
----------
 [100]
(1 row)

SELECT cbor.to_jsonb('\x1903e8');
 to_jsonb 
----------
 [1000]
(1 row)

SELECT cbor.to_jsonb('\x1a000f4240');
 to_jsonb  
-----------
 [1000000]
(1 row)

SELECT cbor.to_jsonb('\x1b000000e8d4a51000');
    to_jsonb     
-----------------
 [1000000000000]
(1 row)

SELECT cbor.to_jsonb('\x1bffffffffffffffff');
        to_jsonb        
------------------------
 [18446744073709551615]
(1 row)

SELECT cbor.to_jsonb('\xc249010000000000000000');
        to_jsonb        
------------------------
 [18446744073709551616]
(1 row)

SELECT cbor.to_jsonb('\x3bffffffffffffffff');
        to_jsonb         
-------------------------
 [-18446744073709551616]
(1 row)

SELECT cbor.to_jsonb('\xc349010000000000000000');
        to_jsonb         
-------------------------
 [-18446744073709551617]
(1 row)

SELECT cbor.to_jsonb('\x20');
 to_jsonb 
----------
 [-1]
(1 row)

SELECT cbor.to_jsonb('\x29');
 to_jsonb 
----------
 [-10]
(1 row)

SELECT cbor.to_jsonb('\x3863');
 to_jsonb 
----------
 [-100]
(1 row)

SELECT cbor.to_jsonb('\x3903e7');
 to_jsonb 
----------
 [-1000]
(1 row)

SELECT cbor.to_jsonb('\xf90000');
 to_jsonb 
----------
 [0]
(1 row)

SELECT cbor.to_jsonb('\xf98000');
 to_jsonb 
----------
 [0]
(1 row)

SELECT cbor.to_jsonb('\xf93c00');
 to_jsonb 
----------
 [1]
(1 row)

SELECT cbor.to_jsonb('\xfb3ff199999999999a');
 to_jsonb 
----------
 [1.1]
(1 row)

SELECT cbor.to_jsonb('\xf93e00');
 to_jsonb 
----------
 [1.5]
(1 row)

SELECT cbor.to_jsonb('\xf97bff');
 to_jsonb 
----------
 [65504]
(1 row)

SELECT cbor.to_jsonb('\xfa47c35000');
 to_jsonb 
----------
 [100000]
(1 row)

SELECT cbor.to_jsonb('\xfa7f7fffff');
                 to_jsonb                  
-------------------------------------------
 [340282346638528860000000000000000000000]
(1 row)

SELECT cbor.to_jsonb('\xfb7e37e43c8800759c');
                                                                                                                                                    to_jsonb                                                                                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
(1 row)

SELECT cbor.to_jsonb('\xf90001');
          to_jsonb           
-----------------------------
 [0.00000005960464477539063]
(1 row)

SELECT cbor.to_jsonb('\xf90400');
      to_jsonb      
--------------------
 [0.00006103515625]
(1 row)

SELECT cbor.to_jsonb('\xf9c400');
 to_jsonb 
----------
 [-4]
(1 row)

SELECT cbor.to_jsonb('\xfbc010666666666666');
 to_jsonb 
----------
 [-4.1]
(1 row)

SAVEPOINT infinity;
SELECT cbor.to_jsonb('\xf97c00');
ERROR:  Decoding of INFINITY value not possible since not part of JSON
CONTEXT:  PL/pgSQL function cbor.next_float_half(bytea) line 14 at RAISE
SQL function "next_item" statement 1
SQL function "to_jsonb" statement 1
ROLLBACK TO infinity;
SAVEPOINT nan;
SELECT cbor.to_jsonb('\xf97e00');
ERROR:  Decoding of NAN value not possible since not part of JSON
CONTEXT:  PL/pgSQL function cbor.next_float_half(bytea) line 16 at RAISE
SQL function "next_item" statement 1
SQL function "to_jsonb" statement 1
ROLLBACK TO nan;
SAVEPOINT infinity;
SELECT cbor.to_jsonb('\xf9fc00');
ERROR:  Decoding of INFINITY value not possible since not part of JSON
CONTEXT:  PL/pgSQL function cbor.next_float_half(bytea) line 14 at RAISE
SQL function "next_item" statement 1
SQL function "to_jsonb" statement 1
ROLLBACK TO infinity;
SAVEPOINT infinity;
SELECT cbor.to_jsonb('\xfa7f800000');
ERROR:  Decoding of INFINITY value not possible since not part of JSON
CONTEXT:  PL/pgSQL function cbor.next_float_single(bytea) line 23 at RAISE
SQL function "next_item" statement 1
SQL function "to_jsonb" statement 1
ROLLBACK TO infinity;
SAVEPOINT nan;
SELECT cbor.to_jsonb('\xfa7fc00000');
ERROR:  Decoding of NAN value not possible since not part of JSON
CONTEXT:  PL/pgSQL function cbor.next_float_single(bytea) line 25 at RAISE
SQL function "next_item" statement 1
SQL function "to_jsonb" statement 1
ROLLBACK TO nan;
SAVEPOINT infinity;
SELECT cbor.to_jsonb('\xfaff800000');
ERROR:  Decoding of INFINITY value not possible since not part of JSON
CONTEXT:  PL/pgSQL function cbor.next_float_single(bytea) line 23 at RAISE
SQL function "next_item" statement 1
SQL function "to_jsonb" statement 1
ROLLBACK TO infinity;
SAVEPOINT infinity;
SELECT cbor.to_jsonb('\xfb7ff0000000000000');
ERROR:  Decoding of INFINITY value not possible since not part of JSON
CONTEXT:  PL/pgSQL function cbor.next_float_double(bytea) line 27 at RAISE
SQL function "next_item" statement 1
SQL function "to_jsonb" statement 1
ROLLBACK TO infinity;
SAVEPOINT nan;
SELECT cbor.to_jsonb('\xfb7ff8000000000000');
ERROR:  Decoding of NAN value not possible since not part of JSON
CONTEXT:  PL/pgSQL function cbor.next_float_double(bytea) line 29 at RAISE
SQL function "next_item" statement 1
SQL function "to_jsonb" statement 1
ROLLBACK TO nan;
SAVEPOINT infinity;
SELECT cbor.to_jsonb('\xfbfff0000000000000');
ERROR:  Decoding of INFINITY value not possible since not part of JSON
CONTEXT:  PL/pgSQL function cbor.next_float_double(bytea) line 27 at RAISE
SQL function "next_item" statement 1
SQL function "to_jsonb" statement 1
ROLLBACK TO infinity;
SELECT cbor.to_jsonb('\xf4');
 to_jsonb 
----------
 [false]
(1 row)

SELECT cbor.to_jsonb('\xf5');
 to_jsonb 
----------
 [true]
(1 row)

SELECT cbor.to_jsonb('\xf6');
 to_jsonb 
----------
 [null]
(1 row)

SAVEPOINT undefined;
SELECT cbor.to_jsonb('\xf7');
ERROR:  Decoding of Undefined not possible since since not part of JSON
CONTEXT:  PL/pgSQL function cbor.raise(text,json,anyelement) line 6 at RAISE
SQL function "next_item" statement 1
SQL function "to_jsonb" statement 1
ROLLBACK TO undefined;
SELECT cbor.to_jsonb('\xf0');
 to_jsonb 
----------
 [16]
(1 row)

SELECT cbor.to_jsonb('\xf818');
 to_jsonb 
----------
 [24]
(1 row)

SELECT cbor.to_jsonb('\xf8ff');
 to_jsonb 
----------
 [255]
(1 row)

SAVEPOINT not_part_of_json;
SELECT cbor.to_jsonb('\xc074323031332d30332d32315432303a30343a30305a');
ERROR:  Decoding of CBOR type not implemented {"major_type" : 6, "additional_type" : 0}
CONTEXT:  PL/pgSQL function cbor.raise(text,json,anyelement) line 4 at RAISE
SQL function "next_item" statement 1
SQL function "to_jsonb" statement 1
ROLLBACK TO not_part_of_json;
SAVEPOINT not_part_of_json;
SELECT cbor.to_jsonb('\xc11a514b67b0');
ERROR:  Decoding of CBOR type not implemented {"major_type" : 6, "additional_type" : 1}
CONTEXT:  PL/pgSQL function cbor.raise(text,json,anyelement) line 4 at RAISE
SQL function "next_item" statement 1
SQL function "to_jsonb" statement 1
ROLLBACK TO not_part_of_json;
SAVEPOINT not_part_of_json;
SELECT cbor.to_jsonb('\xc1fb41d452d9ec200000');
ERROR:  Decoding of CBOR type not implemented {"major_type" : 6, "additional_type" : 1}
CONTEXT:  PL/pgSQL function cbor.raise(text,json,anyelement) line 4 at RAISE
SQL function "next_item" statement 1
SQL function "to_jsonb" statement 1
ROLLBACK TO not_part_of_json;
SAVEPOINT not_part_of_json;
SELECT cbor.to_jsonb('\xd74401020304');
ERROR:  Decoding of CBOR type not implemented {"major_type" : 6, "additional_type" : 23}
CONTEXT:  PL/pgSQL function cbor.raise(text,json,anyelement) line 4 at RAISE
SQL function "next_item" statement 1
SQL function "to_jsonb" statement 1
ROLLBACK TO not_part_of_json;
SAVEPOINT not_implemented;
SELECT cbor.to_jsonb('\xd818456449455446');
ERROR:  Decoding of CBOR type not implemented {"major_type" : 6, "additional_type" : 24}
CONTEXT:  PL/pgSQL function cbor.raise(text,json,anyelement) line 4 at RAISE
SQL function "next_item" statement 1
SQL function "to_jsonb" statement 1
ROLLBACK TO not_implemented;
SAVEPOINT not_part_of_json;
SELECT cbor.to_jsonb('\xd82076687474703a2f2f7777772e6578616d706c652e636f6d');
ERROR:  Decoding of CBOR type not implemented {"major_type" : 6, "additional_type" : 24}
CONTEXT:  PL/pgSQL function cbor.raise(text,json,anyelement) line 4 at RAISE
SQL function "next_item" statement 1
SQL function "to_jsonb" statement 1
ROLLBACK TO not_part_of_json;
SELECT cbor.to_jsonb('\x40');
 to_jsonb 
----------
 [""]
(1 row)

SELECT cbor.to_jsonb('\x4401020304');
   to_jsonb   
--------------
 ["01020304"]
(1 row)

SELECT cbor.to_jsonb('\x60');
 to_jsonb 
----------
 [""]
(1 row)

SELECT cbor.to_jsonb('\x6161');
 to_jsonb 
----------
 ["a"]
(1 row)

SELECT cbor.to_jsonb('\x6449455446');
 to_jsonb 
----------
 ["IETF"]
(1 row)

SELECT cbor.to_jsonb('\x62225c');
 to_jsonb 
----------
 ["\"\\"]
(1 row)

SELECT cbor.to_jsonb('\x62c3bc');
 to_jsonb 
----------
 ["√º"]
(1 row)

SELECT cbor.to_jsonb('\x63e6b0b4');
 to_jsonb 
----------
 ["Ê∞¥"]
(1 row)

SELECT cbor.to_jsonb('\x64f0908591');
 to_jsonb 
----------
 ["êÖë"]
(1 row)

SELECT cbor.to_jsonb('\x80');
 to_jsonb 
----------
 [[]]
(1 row)

SELECT cbor.to_jsonb('\x83010203');
  to_jsonb   
-------------
 [[1, 2, 3]]
(1 row)

SELECT cbor.to_jsonb('\x8301820203820405');
       to_jsonb        
-----------------------
 [[1, [2, 3], [4, 5]]]
(1 row)

SELECT cbor.to_jsonb('\x98190102030405060708090a0b0c0d0e0f101112131415161718181819');
                                           to_jsonb                                            
-----------------------------------------------------------------------------------------------
 [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]]
(1 row)

SELECT cbor.to_jsonb('\xa0');
 to_jsonb 
----------
 [{}]
(1 row)

SELECT cbor.to_jsonb('\xa201020304');
      to_jsonb      
--------------------
 [{"1": 2, "3": 4}]
(1 row)

SELECT cbor.to_jsonb('\xa26161016162820203');
        to_jsonb         
-------------------------
 [{"a": 1, "b": [2, 3]}]
(1 row)

SELECT cbor.to_jsonb('\x826161a161626163');
      to_jsonb       
---------------------
 [["a", {"b": "c"}]]
(1 row)

SELECT cbor.to_jsonb('\xa56161614161626142616361436164614461656145');
                       to_jsonb                       
------------------------------------------------------
 [{"a": "A", "b": "B", "c": "C", "d": "D", "e": "E"}]
(1 row)

SELECT cbor.to_jsonb('\x5f42010243030405ff');
    to_jsonb    
----------------
 ["0102030405"]
(1 row)

SELECT cbor.to_jsonb('\x7f657374726561646d696e67ff');
   to_jsonb    
---------------
 ["streaming"]
(1 row)

SELECT cbor.to_jsonb('\x9fff');
 to_jsonb 
----------
 [[]]
(1 row)

SELECT cbor.to_jsonb('\x9f018202039f0405ffff');
       to_jsonb        
-----------------------
 [[1, [2, 3], [4, 5]]]
(1 row)

SELECT cbor.to_jsonb('\x9f01820203820405ff');
       to_jsonb        
-----------------------
 [[1, [2, 3], [4, 5]]]
(1 row)

SELECT cbor.to_jsonb('\x83018202039f0405ff');
       to_jsonb        
-----------------------
 [[1, [2, 3], [4, 5]]]
(1 row)

SELECT cbor.to_jsonb('\x83019f0203ff820405');
       to_jsonb        
-----------------------
 [[1, [2, 3], [4, 5]]]
(1 row)

SELECT cbor.to_jsonb('\x9f0102030405060708090a0b0c0d0e0f101112131415161718181819ff');
                                           to_jsonb                                            
-----------------------------------------------------------------------------------------------
 [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]]
(1 row)

SELECT cbor.to_jsonb('\xbf61610161629f0203ffff');
        to_jsonb         
-------------------------
 [{"a": 1, "b": [2, 3]}]
(1 row)

SELECT cbor.to_jsonb('\x826161bf61626163ff');
      to_jsonb       
---------------------
 [["a", {"b": "c"}]]
(1 row)

SELECT cbor.to_jsonb('\xbf6346756ef563416d7421ff');
          to_jsonb          
----------------------------
 [{"Amt": -2, "Fun": true}]
(1 row)

ROLLBACK;
